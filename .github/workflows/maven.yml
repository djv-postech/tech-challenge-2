name: fast-food-management-CI

on:
  push:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - run: cd fastfood-management-system && mvn -B test

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        jacoco-csv-file: "**/jacoco.csv"

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

    - name: Commit the badge (if it changed)
      run: |
        if [[ `git status --porcelain` ]]; then
          git config --global user.name 'YOUR NAME HERE'
          git config --global user.email 'YOUR-GITHUB-USERID@users.noreply.github.com'
          git add -A
          git commit -m "Autogenerated JaCoCo coverage badge"
          git push
        fi

    - name: Log Converage Percentage
      run:
        echo "coverage = ${{steps.jacoco.outputs.coverage}}"
        echo "branch coverage = ${{steps.jacoco.outputs.branch}}"
    
  
  build:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: cd fastfood-management-system && mvn -B package --file pom.xml
 
  # publish:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       package: '*.jar'
        
  #   - name: Publish
  #     run: cd fastfood-management-system && mvn deploy --file pom.xml
  #     env:
  #       GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  # deploy-Prd:
  #    runs-on: ubuntu-latest
  #    if: github.ref == 'refs/heads/main'
  #    environment: 
  #      name: Prod
  #    needs: publish
  #    steps:
  #      - name: Deploy em prod
  #        shell: bash
  #        run:
  #          echo "Deploy em prod"
    

 
