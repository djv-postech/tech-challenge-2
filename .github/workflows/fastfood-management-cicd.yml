name: fastfood-management-CICD

on:
  push:
     branches:
       - main

jobs:
 
  Unit-Tests:
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - run: cd fastfood-management-system && mvn test

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        jacoco-csv-file: >
          fastfood-management-system/fastfood-system-application/target/site/jacoco/jacoco.csv

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
    
  
  Sonar-Analisys:
      
      needs: Unit-Tests
      runs-on: ubuntu-latest
     
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            distribution: 'zulu'
        - name: Cache SonarCloud packages
          uses: actions/cache@v3
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache Maven packages
          uses: actions/cache@v3
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        - name: analyze
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: cd fastfood-management-system && mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=djv-postech_tech-challenge-2
 
  Build:
    
    runs-on: ubuntu-latest
    needs: Sonar-Analisys
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build Project and Generate Docker Image
      run: cd fastfood-management-system && mvn clean install -DskipTests --file pom.xml
   
    - name: Push Image to DockerHub
      run: cd fastfood-management-system/fastfood-system-application && mvn dockerfile:push

  
  DeployEKS:
      needs: Build
      runs-on: ubuntu-latest
     
      steps:
   
      - uses: actions/checkout@v3
 
      - name: Configurando Credenciais AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1
 
      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v1
        with:
          host: github.com
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Clone repository
        run: git clone git@github.com:djv-postech/fastfood-management-ci-infra.git
 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
 
      - run: terraform -chdir=fastfood-management-ci-infra init
 
      - run: terraform -chdir=fastfood-management-ci-infra apply  -auto-approve
 
      - name: Kubectl Tool
        uses: Azure/setup-kubectl@v3
 
      - run: aws sts get-caller-identity
       
      - run: aws eks update-kubeconfig --region us-east-1 --name fastfood-management-cluster
      
      - run: chmod 755 fastfood-management-ci-infra/init.sh
      - run: cd fastfood-management-ci-infra && ./init.sh
      

 
